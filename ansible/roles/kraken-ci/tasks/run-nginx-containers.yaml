---
- name: Force removal of certs directory for nginx
  become: yes
  file: >
    path="{{ nginx_container_path }}/certs/"
    state=absent

- name: Create directories for nginx files
  file: >
    path="{{ nginx_container_path }}/{{ item }}/"
    state=directory
  with_items:
    - certs
    - vhosts.d
    - html

- name: Run nginx container
  docker:
    name: "{{ nginx_container_name }}"
    docker_api_version: "{{ docker_api_version }}"
    image: nginx
    state: started
    pull: always
    tty: yes
    net: bridge
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/conf.d
      - "{{ nginx_container_path }}/certs:/etc/nginx/certs:ro"
      - "{{ nginx_container_path }}/vhost.d:/etc/nginx/vhost.d"
      - "{{ nginx_container_path }}/html:/usr/share/nginx/html"

- name: Run {{ conf_container_name }} container
  docker:
    name: "{{ conf_container_name }}"
    docker_api_version: "{{ docker_api_version }}"
    image: jwilder/docker-gen
    state: started
    pull: always
    tty: yes
    net: bridge
    command: -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - "{{ nginx_container_name }}"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "{{ nginx_container_path }}/conf:/etc/docker-gen/templates:ro"

- name: Run {{ cert_container_name }} container
  docker:
    name: "{{ cert_container_name }}"
    docker_api_version: "{{ docker_api_version }}"
    image: jrcs/letsencrypt-nginx-proxy-companion
    state: started
    pull: always
    net: bridge
    env:
      NGINX_DOCKER_GEN_CONTAINER: "{{ conf_container_name }}"
    volumes_from:
      - "{{ nginx_container_name }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ nginx_container_path }}/certs:/etc/nginx/certs:rw"
